@*-----------------------------------------------------------------------
<copyright file="Basics.cshtml" company="Tahoe Regional Planning Agency and Sitka Technology Group">
Copyright (c) Tahoe Regional Planning Agency and Sitka Technology Group. All rights reserved.
<author>Sitka Technology Group</author>
</copyright>

<license>
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

Source code is available upon request via <support@sitkatech.com>.
</license>
-----------------------------------------------------------------------*@
@using LtInfo.Common.HtmlHelperExtensions
@using ProjectFirma.Web.Common
@using ProjectFirma.Web.Models
@using ProjectFirmaModels.Models
@inherits ProjectFirma.Web.Views.ProjectCreate.Basics

@section JavascriptAndStylesContent
{
    <style>
        .row {
            margin-top: 5px;
        }
    </style>
    <script type="text/javascript">
        // <![CDATA[
        function displaySelectedFundingTypeFields() {
            var fundingTypeDropdown = jQuery("#@Html.IdFor(x => x.FundingTypeID)");
            if (fundingTypeDropdown.val() === "1") {
                jQuery("#@Html.IdFor(x => x.EstimatedTotalCost)").prop('disabled', false);
                jQuery("#@Html.IdFor(x => x.EstimatedAnnualOperatingCost)").prop('disabled', true);
                jQuery(".op-label").css("color", "#666");
                jQuery(".cap-label").css("color", "");
            }
            else if (fundingTypeDropdown.val() === "2") {
                jQuery("#@Html.IdFor(x => x.EstimatedTotalCost)").prop('disabled', true);
                jQuery("#@Html.IdFor(x => x.EstimatedAnnualOperatingCost)").prop('disabled', false);
                jQuery(".op-label").css("color", "");
                jQuery(".cap-label").css("color", "#666");
            }
        }

        jQuery(document).ready(function ()
        {
            displaySelectedFundingTypeFields();
            HookupCheckIfFormIsDirty(undefined, ".submitProject");

            // Bypass the "Could not parse a blank value" error
            jQuery("#TaxonomyLeafID option.bs-title-option").val(-1);
        });
        // ]]>
    </script>
}
<p>Add your @FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabel()'s basic information here.</p>
<hr />

@using (Html.BeginForm())
{
    <div class="form-horizontal">
        <div class="form-group">
            <div class="col-xs-12 col-sm-4 control-label">
                @Html.LabelWithSugarFor(m => m.TaxonomyLeafID, 600, MultiTenantHelpers.GetTaxonomyLeafDisplayNameForProject())
            </div>
            <div class="col-xs-12 col-sm-8">
                @Html.SearchableDropDownListFor(x => x.TaxonomyLeafID, ViewDataTyped.TaxonomyLeafs, string.Format("Select a {0}", MultiTenantHelpers.GetTaxonomyLeafDisplayNameForProject()))
                @Html.ValidationMessageFor(m => m.TaxonomyLeafID)
            </div>
        </div>
        <div class="form-group">
            <div class="col-xs-12 col-sm-4 control-label">
                @Html.LabelWithSugarFor(m => m.ProjectName)
            </div>
            <div class="col-xs-12 col-sm-8">
                @Html.TextBoxFor(m => m.ProjectName, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.ProjectName)
            </div>
        </div>
        <div class="form-group">
            <div class="col-xs-12 col-sm-4 control-label">
                @Html.LabelWithSugarFor(m => m.ProjectDescription)
            </div>
            <div class="col-xs-12 col-sm-8">
                @Html.TextAreaWithMaxLengthFor(m => m.ProjectDescription, new TextAreaForExtensions.TextAreaDimensions(null, 8), null, new List<string> { "form-control" })
                @Html.ValidationMessageFor(m => m.ProjectDescription)
            </div>
        </div>
        @if (ViewDataTyped.ShowProjectStageDropDown)
        {
            <div class="form-group">
                <div class="col-xs-12 col-sm-4 control-label">
                    @Html.LabelWithSugarFor(m => m.ProjectStageID, true)
                </div>
                <div class="col-xs-12 col-sm-8">
                    @if (ViewDataTyped.IsEditable)
                    {
                        @Html.DropDownListFor(m => m.ProjectStageID, ViewDataTyped.ProjectStages, new {@class = "form-control", style = "width: auto;"})
                        @Html.ValidationMessageFor(m => m.ProjectStageID)
                    }
                    else
                    {
                        @ViewDataTyped.ProjectStage.ProjectStageDisplayName
                    }
                </div>
            </div>
        }
        else
        {
            @Html.HiddenFor(m => m.ProjectStageID)
        }
        <div class="form-group">
            <div class="col-xs-12 col-sm-4 control-label">
                @Html.LabelWithSugarFor(m => m.FundingTypeID)
            </div>
            <div class="col-xs-12 col-sm-8">
                @Html.DropDownListFor(m => m.FundingTypeID, ViewDataTyped.FundingTypes, new { onchange = "displaySelectedFundingTypeFields()", @class = "form-control", style = "width: auto;" })
                @Html.ValidationMessageFor(m => m.FundingTypeID)
            </div>
        </div>
        <div class="form-group">
            <div class="col-xs-12 col-sm-4 control-label">
                @Html.LabelWithSugarFor(m => m.EstimatedTotalCost)
            </div>
            <div class="col-xs-12 col-sm-8">
                @Html.EditorFor(m => m.EstimatedTotalCost, new { @class = "form-control", style = "width: auto;" })
                @Html.ValidationMessageFor(m => m.EstimatedTotalCost)
            </div>
        </div>
        <div class="form-group">
            <div class="col-xs-12 col-sm-4 control-label">
                @Html.LabelWithSugarFor(m => m.EstimatedAnnualOperatingCost)
            </div>
            <div class="col-xs-12 col-sm-8">
                @Html.EditorFor(m => m.EstimatedAnnualOperatingCost, new { @class = "form-control", style = "width: auto;" })
                @Html.ValidationMessageFor(m => m.EstimatedAnnualOperatingCost)
            </div>
        </div>
        <div class="form-group">
            <div class="col-xs-12 col-sm-4 control-label">
                @Html.LabelWithSugarFor(m => m.PlanningDesignStartYear)
            </div>
            <div class="col-xs-12 col-sm-8">
                @Html.DropDownListFor(m => m.PlanningDesignStartYear, ViewDataTyped.StartYearRange, new { @class = "form-control", style = "width: auto;" })
                @Html.ValidationMessageFor(m => m.PlanningDesignStartYear)
            </div>
        </div>
        <div class="form-group">
            <div class="col-xs-12 col-sm-4 control-label">
                @Html.LabelWithSugarFor(m => m.ImplementationStartYear)
            </div>
            <div class="col-xs-12 col-sm-8">
                @Html.DropDownListFor(m => m.ImplementationStartYear, ViewDataTyped.StartYearRange, new { @class = "form-control", style = "width: auto;" })
                @Html.ValidationMessageFor(m => m.ImplementationStartYear)
            </div>
        </div>
        <div class="form-group">
            <div class="col-xs-12 col-sm-4 control-label">
                @Html.LabelWithSugarFor(m => m.CompletionYear)
            </div>
            <div class="col-xs-12 col-sm-8">
                @Html.DropDownListFor(m => m.CompletionYear, ViewDataTyped.CompletionYearRange, new { @class = "form-control", style = "width: auto;" })
                @Html.ValidationMessageFor(m => m.CompletionYear)
            </div>
        </div>

        @Html.EditorFor(m => m.ProjectCustomAttributes, new {ProjectCustomAttributes = ViewDataTyped.ProjectCustomAttributeTypes, colLeft = 4, colRight = 8})
    </div>

    @Html.HiddenFor(m => m.ProjectID)
    @Html.HiddenFor(m => m.ImportExternalProjectStagingID)

    <hr />
    <div class="pull-right">
        <button type="submit" class="btn btn-xs btn-firma" value="false" name="@Html.NameFor(x => x.AutoAdvance)">Save</button>
        <button type="submit" class="btn btn-xs btn-firma" value="true" name="@Html.NameFor(x => x.AutoAdvance)">Save &amp; Continue<span class='glyphicon glyphicon-chevron-right'></span></button>
    </div>
}
